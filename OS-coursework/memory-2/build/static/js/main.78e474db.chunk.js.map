{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["MainWindow","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","initial_helper","max","initial","Array","i","onLengthChange","e","setState","maxPosition","parseInt","target","value","onLengthSubmit","preventDefault","new_in","new_out","state","inMain","outMain","currentPosition","currentFault","memorySize","strategy","OnNextOne","cur_pos","virtual_memory_schedual","OnPreviousOne","onChange","choosen_pos","onPositionSubmit","position","console","log","Math","floor","mainMemory","slice","outMemory","cur_position","indexOf","length","index","splice","push","first","shift","unshift","last","pop","onReset","handleStrategy","react_default","a","createElement","className","App_Strategy","Control","Length","max_position","current_fault","PositionSubmit","MemoDisplay","memo","React","Component","Strategy","colomn","showCase","count","tempt","j","remain","style","width","map","key","toString","color","LengthSetting","ExecPosition","handleSubmit","CurrentFault","ResetFaultNumber","_ref","Error","onSubmit","type","_ref2","onClick","_ref3","_ref4","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.78e474db.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport './../node_modules/bulma/css/bulma.css';\n\n\n\nclass MainWindow extends React.Component{\n  initial_helper = (max)=>{\n    let initial = Array(max);\n    for(let i =0;i<max;i++){\n      initial[i]=i;\n    }\n    return initial;\n  };\n  constructor(props){\n    super(props);\n    this.state ={\n      inMain:this.initial_helper(0),\n      outMain:this.initial_helper(32),\n      currentPosition:0,\n      maxPosition:32,\n      currentFault:0,\n      memorySize:4,\n      strategy:'FIFO'\n\n    }\n  }\n  onLengthChange = (e)=>{\n    this.setState({\n      maxPosition:parseInt(e.target.value)\n    })\n  };\n  onLengthSubmit =(e) =>{\n    e.preventDefault();\n    let new_in = this.initial_helper(0);\n    let new_out = this.initial_helper(this.state.maxPosition);\n    this.setState({\n      inMain:new_in,\n      outMain:new_out,\n      currentPosition:0,\n      currentFault:0,\n      memorySize:4,\n      strategy:'FIFO'\n    })\n  };\n  OnNextOne =(e) =>{\n    let cur_pos = this.state.currentPosition + 1;\n    if(cur_pos >= this.state.maxPosition*10){\n      cur_pos = this.state.maxPosition*10-1;\n    }\n    this.setState({\n      currentPosition:cur_pos,\n    })\n    this.virtual_memory_schedual(cur_pos);\n  };\n  OnPreviousOne =(e) =>{\n    let cur_pos = this.state.currentPosition - 1;\n    if(cur_pos < 0){\n      cur_pos = 0;\n    }\n    this.setState({\n      currentPosition:cur_pos,\n    })\n    this.virtual_memory_schedual(cur_pos);\n  };\n  onChange =(e) =>{\n    let choosen_pos = e.target.value;\n    if(choosen_pos<0){\n      choosen_pos=0;\n    }else if(choosen_pos>=this.state.maxPosition*10){\n      choosen_pos = this.state.maxPosition*10-1;\n    }\n    this.setState({\n      currentPosition:choosen_pos,\n    })\n  };\n  onPositionSubmit= (e)=>{\n    e.preventDefault();\n    this.virtual_memory_schedual(this.state.currentPosition);\n  }\n  //#TODO real topic is here! 有没有-》满了吗？-》选一个出去-》拉一个回来\n  virtual_memory_schedual = (position)=>{\n    console.log('finding #'+position);\n    let target = Math.floor(position/10);\n    let mainMemory = this.state.inMain.slice();\n    let outMemory = this.state.outMain.slice();\n    let strategy = this.state.strategy.slice();\n    let cur_position =mainMemory.indexOf(target);\n    if(cur_position===-1){\n      this.setState({\n        currentFault:this.state.currentFault+1,\n      });\n     if(mainMemory.length===4){\n       let index = outMemory.indexOf(target);\n       outMemory.splice(index,1);\n       if(strategy==='FIFO'){\n         mainMemory.push(target);\n         let first = mainMemory.shift();\n         outMemory.push(first);\n       }else {\n         mainMemory.unshift(target);\n         let last = mainMemory.pop();\n         outMemory.push(last);\n       }\n\n     }else {\n       let index = outMemory.indexOf(target);\n       outMemory.splice(index,1);\n       if(strategy==='FIFO'){\n         mainMemory.push(target);\n       }else {\n         mainMemory.unshift(target);\n       }\n     }\n    }else {\n      if(strategy==='LRU'){\n        mainMemory.splice(cur_position,1);\n        mainMemory.unshift(target);\n      }\n    }\n    this.setState({\n      inMain:mainMemory,\n      outMain:outMemory,\n    })\n  };\n  onReset = (e) =>{\n    this.setState({\n      currentFault:0,\n    })\n  };\n  handleStrategy = (e)=>{\n    this.setState({\n      strategy:e.target.value,\n    })\n  };\n  render(){\n    return (\n        <div className='container'>\n          <div className='columns'>\n            <div className='column is-one-third'>\n              <h2>MEMORY SIZE IS 4!</h2>\n              <h2>EACH BLOCK CONTAINS 10 INSTRUCTIONS</h2>\n              <Strategy handleStrategy={this.handleStrategy}/>\n              <Control\n                  onLengthChange={this.onLengthChange}\n                  onLengthSubmit={this.onLengthSubmit}\n                  Length={this.state.maxPosition}\n                  OnNextOne={this.OnNextOne}\n                  OnPreviousOne={this.OnPreviousOne}\n                  onChange={this.onChange}\n                  position={this.state.currentPosition}\n                  max_position={this.state.maxPosition}\n                  current_fault={this.state.currentFault}\n                  onReset={this.onReset}\n                  PositionSubmit = {this.onPositionSubmit}\n              />\n            </div>\n            <div className='column'>\n              <MemoDisplay memo={this.state.inMain} target={Math.floor(this.state.currentPosition/10)}/>\n            </div>\n            <div className='column'>\n              <MemoDisplay memo={this.state.outMain} target={Math.floor(this.state.currentPosition/10)}/>\n            </div>\n          </div>\n        </div>\n    );\n  }\n}\nclass Strategy extends React.Component{\n  render() {\n    return(\n        <div className=\"select\">\n          <select onChange={this.props.handleStrategy}>\n            <option value='FIFO'>FIFO</option>\n            <option value='LRU'>LRU</option>\n          </select>\n        </div>\n    );\n  }\n}\nfunction MemoDisplay(props) {\n  let colomn = Math.floor(props.memo.length/5);\n  const memo = props.memo.slice();\n  let showCase = [];\n  let count = 0;\n  for(let i =0;i<colomn;i++){\n    let tempt = [];\n    for(let j = 0;j<5;j++){\n      tempt.push(memo[count]);\n      count++;\n    }\n    showCase.push(tempt);\n  }\n  let remain = [];\n  while (count < memo.length) {\n    remain.push(memo[count]);\n    count++;\n  }\n  if(remain.length!==0){\n    showCase.push(remain);\n  }\n  const style = {\n    'width': '70px',\n  };\n  return(\n      <div>\n        {\n          showCase.map((value,index)=>{\n            return(\n                <div key={index.toString()}>\n                  {\n                    value.map((value,index)=>{\n                      let color = null;\n                      if(value!==props.target){\n                        color = value;\n                      }else {\n                        color = <font color={'red'}>{value}</font>\n                      }\n                      return(\n                          <button key={index} style={style}>{color}</button>\n                      );\n                    })\n                  }\n                </div>\n            );\n          })\n        }\n      </div>\n  );\n}\nfunction Control(props){\n  return(\n      <div>\n        <LengthSetting onLengthChange={props.onLengthChange} onLengthSubmit={props.onLengthSubmit} length={props.Length}/>\n        <ExecPosition OnNextOne={props.OnNextOne} OnPreviousOne={props.OnPreviousOne} onChange={props.onChange} position={props.position} max_position={props.max_position}\n                      handleSubmit={props.PositionSubmit}/>\n        <CurrentFault current_fault={props.current_fault}/>\n        <ResetFaultNumber onReset={props.onReset}/>\n      </div>\n  );\n}\n\nfunction LengthSetting({onLengthChange,onLengthSubmit,length}) {\n  if(length<0){\n    throw new Error('Length is negative');\n  }\n  return(\n      <div>\n        <label>How many blocks do you like?</label>\n        <form onSubmit={onLengthSubmit}>\n          <input type={'number'} value={length} onChange={onLengthChange}/>\n          <input type={'submit'} value={'OK'}/>\n        </form>\n      </div>\n  );\n}\n\nfunction ExecPosition({max_position,onChange,OnNextOne,OnPreviousOne,position,handleSubmit}) {\n  if(position>max_position*10){\n    throw new Error('Position exceed!');\n  }\n  return(\n      <div>\n        <label>Current position of the program.</label>\n        <form onSubmit={handleSubmit}>\n          <input type={'number'} value={position} onChange={onChange}/>\n          <button type={'submit'}>OK</button>\n        </form>\n        <div>\n          <button onClick={OnNextOne}>Next instruction</button>\n          <button onClick={OnPreviousOne}>Previous instruction</button>\n        </div>\n      </div>\n  );\n}\nfunction ResetFaultNumber({onReset}){\n  return(\n      <div>\n        <label>Reset the <b>fault number</b></label>\n        <button onClick={onReset}>Reset</button>\n      </div>\n  );\n}\nfunction CurrentFault({current_fault}) {\n  return (\n      <label>{current_fault}</label>\n  );\n}\n\nexport default MainWindow;\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainWindow from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<MainWindow />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}